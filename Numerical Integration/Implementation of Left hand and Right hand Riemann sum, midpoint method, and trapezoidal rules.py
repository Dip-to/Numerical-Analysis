# -*- coding: utf-8 -*-
"""ni 2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17eztWnmyqZYtSykx3j1gJwQv1JS2Avds
"""

import matplotlib.pyplot as plt

def f(x):
    return x**2

def left_riemann_sum(a, b, n,delta_x):
    total = 0
    for i in range(n):
        x_i = a + i * delta_x
        # print(X_i)
        total += f(x_i) * delta_x
        # print(total)

    return total

def right_riemann_sum(a, b, n,delta_x):
    total = 0
    for i in range(1, n+1):
        x_i = a + i * delta_x
        # print(X_i)
        total += f(x_i) * delta_x
        # print(total)

    return total

def midpoint_method(a, b, n,delta_x):
    total = 0
    for i in range(n):
        # print(X_i)
        x_mid = a + (i + 0.5) * delta_x
        # print(X_i)
        total += f(x_mid) * delta_x
        # print(total)

    return total
def trapezoidal_rule(a, b, n,delta_x):
    total = 0.5 * (f(a) + f(b))  # Add the first and last terms
    for i in range(1, n):
        # print(total)
        x_i = a + i * delta_x
        # print(X_i)
        total += f(x_i)
        # print(total)
    total *= delta_x
    return total
a = 0
b = 4
pp=1e-4
delx=1e-4
delta_x_values=[]
while delx<1:
    delta_x_values.append(delx)
    delx=delx+pp
print(delta_x_values)
#delta_x_values = [0.1, 0.05, 0.01,1,2,3]

left_sums = []
right_sums = []
midpoint_sums = []
actual_values = []
trapezoidal_sums=[]
print("-------------------------------------------------------------------------------------")
print("|    dx      |actual_values|  left_sums | right_sums |midpoint_sums|trapezoidal_sums|")
print("--------------------------------------------------------------------------------------")
for delta_x in delta_x_values:
    n = int((b - a) / delta_x)
    left_sum = left_riemann_sum(a, b, n,delta_x)
    right_sum = right_riemann_sum(a, b, n,delta_x)
    midpoint_sum = midpoint_method(a, b, n,delta_x)
    trapezoidal_sum = trapezoidal_rule(a, b, n,delta_x)
    actual_value=64/3
    left_sums.append(left_sum)
    right_sums.append(right_sum)
    midpoint_sums.append(midpoint_sum)
    actual_values.append(actual_value)
    trapezoidal_sums.append(trapezoidal_sum)
    print(f"  {delta_x:10.6f} | {actual_value:10.6f}  | {left_sum:10.6f} | {right_sum:10.6f} | {midpoint_sum:10.6f} |{trapezoidal_sum:10.6f} | ")



plt.plot(delta_x_values, actual_values, label = "actual_values")
plt.grid()
plt.plot(delta_x_values, left_sums, label = "left_sums")
plt.plot(delta_x_values, right_sums, label = "right_sums")
plt.xlabel("delta X")
plt.ylabel("Value")
plt.plot(delta_x_values, midpoint_sums,label = "midpoint_sums")
plt.plot(delta_x_values, trapezoidal_sums, label="trapezoidal_sums")
plt.legend()
plt.show()