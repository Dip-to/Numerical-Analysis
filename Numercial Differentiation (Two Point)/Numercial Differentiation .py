# -*- coding: utf-8 -*-
"""temp.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/145hy7v_imyD-c-5Ig3fEFSuMCyrnslZN
"""

import sympy as sp
import numpy as np
import matplotlib.pyplot as plt
import time


def calculate_derivative(func, symbol, point):
    drvtv_eq = sp.diff(func, symbol)
    drvtv_function = sp.lambdify(symbol, drvtv_eq, 'numpy')
    drvtv_value = drvtv_function(point)
    return drvtv_value

def forward_diff(f, x, h):
    return (f(x + h) - f(x)) / h

def backward_diff(f, x, h):
    return (f(x) - f(x - h)) / h

def central_diff(f, x, h):
    return (f(x + h) - f(x - h)) / (2 * h)

def f(x):
    return x ** 3 + 3*x
def dif_f(x):
    return 3*x ** 2 + 3

def plot_apprx_vs_h(h, f_d,b_d,c_d,r):
    print("Approximation vs h")
    plt.plot(h, f_d,label='Forward')
    plt.plot(h, b_d,label='Backward')
    plt.plot(h, c_d,label='Central')
    plt.plot(h,r,label='Real')
    plt.xlabel('h')
    plt.ylabel('Approximation')
    plt.title('Approximation vs h')
    plt.grid()
    plt.legend()
    plt.show()

def true_error(h, f_d,b_d,c_d):
    print("True Errror vs h")
    plt.plot(h, f_d,label='Forward')
    plt.plot(h, b_d,label='Backward')
    plt.plot(h, c_d,label='Central')
    plt.xlabel('h')
    plt.ylabel('true error')
    plt.title(' true error vs h ')
    plt.grid()
    plt.legend()
    plt.show()
def r_true_error(h, f_d,b_d,c_d):
    print("Relative True Errror vs h")
    plt.plot(h, f_d,label='Forward')
    plt.plot(h, b_d,label='Backward')
    plt.plot(h, c_d,label='Central')
    plt.xlabel('h')
    plt.ylabel('relative true error')
    plt.title('relative true error vs h')
    plt.grid()
    plt.legend()
    plt.show()

def aprrx_error_plot(h, f_d,b_d,c_d):
    print("Approx Errror vs h")
    plt.plot(h, f_d,label='Forward')
    plt.plot(h, b_d,label='Backward')
    plt.plot(h, c_d,label='Central')
    plt.xlabel('h')
    plt.ylabel('Approx Errror error')
    plt.title('Aprox Errror vs h')
    plt.grid()
    plt.legend()
    plt.show()
def rel_aprrx_error_plot(h, f_d,b_d,c_d):
    print("Relative Approx Errror vs h")
    plt.plot(h, f_d,label='Forward')
    plt.plot(h, b_d,label='Backward')
    plt.plot(h, c_d,label='Central')
    plt.xlabel('h')
    plt.ylabel('relative Approx Errror error')
    plt.title('relative Aprox Errror vs h')
    plt.grid()
    plt.legend()
    plt.show()
x = sp.symbols('x')

x_value = input("Enter a x: ")
x_value=float(x_value)
real_drvtv = dif_f(x_value)
h = 1
h_dif=0.01
h_arr=[]
f_d_arr=[]
b_d_arr=[]
c_d_arr=[]
real_arr=[]
t_e_f=[]
t_b_f=[]
t_c_f=[]
r_t_e_f=[]
r_t_b_f=[]
r_t_c_f=[]
f_d_prev=0
b_d_prev=0
c_d_prev=0

apprx_fd=[]
apprx_bd=[]
apprx_cd=[]

r_apprx_fd=[]
r_apprx_bd=[]
r_apprx_cd=[]
i=0
print("    h      |    f'(x)   |  Forward   |   Backword |  Central  ")
print("------------------------------------------------------------------")
while h>=h_dif:
  f_d = forward_diff(f, x_value, h)
  b_d = backward_diff(f, x_value, h)
  c_d = central_diff(f, x_value, h)

  error_forward = (abs(real_drvtv- f_d))
  error_backward = (abs(real_drvtv- b_d))
  error_central = (abs(real_drvtv -c_d))

  t_e_f.append(error_forward)
  t_b_f.append(error_backward)
  t_c_f.append(error_central)

  r_t_e_f.append((abs(error_forward)*100)/real_drvtv)
  r_t_b_f.append((abs(error_backward)*100)/real_drvtv)
  r_t_c_f.append((abs(error_central)*100)/real_drvtv)

  i=i+1
  print(f"{h:10.4f} | {real_drvtv:10.4f} | {f_d:10.4f} | {b_d:10.4f} | {c_d:10.4f} ")
  h=h-h_dif
  h_arr.append(h)
  f_d_arr.append(f_d)
  b_d_arr.append(b_d)
  c_d_arr.append(c_d)

  ap_fd=abs(f_d-f_d_prev)
  ap_cd=abs(c_d-c_d_prev)
  ap_bd=abs(b_d-b_d_prev)
  apprx_fd.append(ap_fd)
  apprx_bd.append(ap_bd)
  apprx_cd.append(ap_cd)

  r_apprx_fd.append((ap_fd*100)/f_d)
  r_apprx_bd.append((ap_bd*100)/b_d)
  r_apprx_cd.append((ap_cd*100)/c_d)


  f_d_prev=f_d
  b_d_prev=b_d
  c_d_prev=c_d
  real_arr.append(real_drvtv)



plot_apprx_vs_h(h_arr, f_d_arr,b_d_arr,c_d_arr,real_arr)
true_error(h_arr,t_e_f,t_b_f,t_c_f)
r_true_error(h_arr,r_t_e_f,r_t_b_f,r_t_c_f)
aprrx_error_plot(h_arr, apprx_fd,apprx_bd,apprx_cd)
rel_aprrx_error_plot(h_arr, r_apprx_fd,r_apprx_bd,r_apprx_cd)

